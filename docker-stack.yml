version: '3.1'

services:

# PROXY ***************************

  cellar.hub.proxy:
    image: cellarstone/cellar.hub.proxy:0.0.1
    deploy:
      replicas: 2
      update-config:
        parallelism: 2
        delay: 2s
      mode: replicated
      restart-policy: 
        condition: on-failure
    ports:
      - 8080:8080
      - 8081:8081

# CORE ***************************

  cellar.hub.core.web:
    image: cellarstone/cellar.hub.core.web:0.0.1
    restart: always
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: docker.cellar.hub.core.web
    deploy:
      replicas: 2
      update-config: 
        parallelism: 2
        delay: 5s
      restart-policy: 
        condition: on-failure
    ports:
    - "44401:44401"

  cellar.hub.core.admin:
    image: cellarstone/cellar.hub.core.admin:0.0.1
    restart: always
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: docker.cellar.hub.core.admin
    deploy:
      replicas: 2
      update-config: 
        parallelism: 2
        delay: 5s
      restart-policy: 
        condition: on-failure
    ports:
    - "44402:44402"

  cellar.hub.core.api:
    image: cellarstone/cellar.hub.core.api:0.0.1
    restart: always
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: docker.cellar.hub.core.api
    deploy:
      replicas: 2
      update-config: 
        parallelism: 2
        delay: 5s
      restart-policy: 
        condition: on-failure
    ports:
    - "44403:44403"

  cellar.hub.core.cdn:
    image: cellarstone/cellar.hub.core.cdn:0.0.1
    restart: always
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: docker.cellar.hub.core.cdn
    deploy:
      replicas: 2
      update-config: 
        parallelism: 2
        delay: 5s
      restart-policy: 
        condition: on-failure
    ports:
    - "44404:44404"
    volumes:
     - /data/cellarstone.hub/core/cdn:/app/data

  cellar.hub.core.workflow:
    image: cellarstone/cellar.hub.core.workflow:0.0.1
    restart: always
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: docker.cellar.hub.core.workflow
    deploy:
      replicas: 2
      update-config: 
        parallelism: 2
        delay: 5s
      restart-policy: 
        condition: on-failure
    ports:
      - "44405:44405"

  cellar.hub.core.websockets:
    image: cellarstone/cellar.hub.core.websockets:0.0.1
    restart: always
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: docker.cellar.hub.core.websockets
    deploy:
      replicas: 2
      update-config: 
        parallelism: 2
        delay: 5s
      restart-policy: 
        condition: on-failure
    ports:
    - "44406:44406"



# CORE - Third party ***************************

# don't rename to the cellar.hub.** pattern
# some stuffs with elaticsearch require the simple name pattern

# MONGO DB ----------------
  mongodb:
    image: cellarstone/cellar.hub.mongodb:0.0.1
    volumes:
     - /data/cellarstone.hub/core/mongodb:/data/db
    deploy:
      replicas: 2
      update-config: 
        parallelism: 2
        delay: 5s
      restart-policy: 
        condition: on-failure
    ports:
    - "27017:27017"

# MQTT ----------------
  mqtt:
    image: cellarstone/cellar.hub.mqtt:0.0.1
    deploy:
      replicas: 1
      update-config: 
        parallelism: 2
        delay: 5s
      restart-policy: 
        condition: on-failure
    ports:
    - "1883:1883"

# EFK Stack ----------------
  fluentd:
    image: cellarstone/cellar.hub.fluentd:0.0.1
    volumes:
      - ./Core/Log/fluentd/conf:/fluentd/etc
    deploy:
      replicas: 1
      update-config: 
        parallelism: 2
        delay: 5s
      restart-policy: 
        condition: on-failure
    ports:
      - "24224:24224"
      - "24224:24224/udp"

  elasticsearch:
    image: elasticsearch
    volumes:
        - /data/cellarstone.hub/core/elasticsearch:/var/lib/elasticsearch
    expose:
      - 9200
    deploy:
      replicas: 1
      update-config: 
        parallelism: 2
        delay: 5s
      restart-policy: 
        condition: on-failure
    ports:
      - "9200:9200"

  kibana:
    image: kibana
    deploy:
      replicas: 1
      update-config: 
        parallelism: 2
        delay: 5s
      restart-policy: 
        condition: on-failure
    ports:
      - "5601:5601"

# PROMETHEUS ----------------
  prometheus:
    image: cellarstone/cellar.hub.prometheus:0.0.1
    volumes:
      - /data/cellarstone.hub/core/prometheus:/data/prometheus
    deploy:
      replicas: 1
      update-config: 
        parallelism: 2
        delay: 5s
      restart-policy: 
        condition: on-failure
     ports:
      - '9090:9090'
    
  #prometheus pushgateway
  pushgateway:
    image: prom/pushgateway
    deploy:
      replicas: 1
      update-config: 
        parallelism: 2
        delay: 5s
      restart-policy: 
        condition: on-failure
    ports:
      - 9091:9091

# GRAFANA ----------------
  grafana:
    image: grafana/grafana
    volumes:
      - /data/cellarstone.hub/core/grafana:/var/lib/grafana
    deploy:
      replicas: 1
      update-config: 
        parallelism: 2
        delay: 5s
      restart-policy: 
        condition: on-failure
    ports:
      - '3000:3000'

# NET-DATA ----------------
  sysmon:
    image: titpetric/netdata
    cap_add:
      - SYS_PTRACE
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
    deploy:
      replicas: 1
      update-config: 
        parallelism: 2
        delay: 5s
      restart-policy: 
        condition: on-failure
    ports:
      - '19999:19999'

# TICK Stack ----------------

  # Define a Telegraf service
  telegraf:
    image: telegraf:1.4.0
    volumes:
      - ./Core/Db/tickstack/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    deploy:
      replicas: 1
      update-config: 
        parallelism: 2
        delay: 5s
      restart-policy: 
        condition: on-failure
    ports:
      - "8092:8092/udp"
      - "8094:8094"
      - "8125:8125/udp"

  # Define an InfluxDB service
  influxdb:
    image: influxdb:1.3.5
    volumes:
      - /data/cellarstone.hub/core/influxdb:/var/lib/influxdb
    deploy:
      replicas: 1
      update-config: 
        parallelism: 2
        delay: 5s
      restart-policy: 
        condition: on-failure
    ports:
      - "8086:8086"

  # Define a Chronograf service
  chronograf:
    image: chronograf:1.3.8
    environment:
      INFLUXDB_URL: http://influxdb:8086
      KAPACITOR_URL: http://kapacitor:9092
    deploy:
      replicas: 1
      update-config: 
        parallelism: 2
        delay: 5s
      restart-policy: 
        condition: on-failure
    ports:
      - "8888:8888"
      
  # Define a Kapacitor service
  kapacitor:
    image: kapacitor:1.3.3
    environment:
      KAPACITOR_HOSTNAME: kapacitor
      KAPACITOR_INFLUXDB_0_URLS_0: http://influxdb:8086
    deploy:
      replicas: 1
      update-config: 
        parallelism: 2
        delay: 5s
      restart-policy: 
        condition: on-failure
    ports:
      - "9092:9092"

# MODULES ***************************

  cellar.hub.module.office.api:
    image: cellarstone/cellar.hub.module.office.api:0.0.1
    restart: always
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: docker.cellar.hub.module.office.api
    deploy:
      replicas: 1
      update-config: 
        parallelism: 2
        delay: 5s
      restart-policy: 
        condition: on-failure
    ports:
    - "44513:44513"

  cellar.hub.module.office.meetingrooms:
    image: cellarstone/cellar.hub.module.office.meetingrooms:0.0.1
    restart: always
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: docker.cellar.hub.module.office.meetingrooms
    deploy:
      replicas: 1
      update-config: 
        parallelism: 2
        delay: 5s
      restart-policy: 
        condition: on-failure
    ports:
    - "44511:44511"

  cellar.hub.module.office.reception:
    image: cellarstone/cellar.hub.module.office.reception:0.0.1
    restart: always
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: docker.cellar.hub.module.office.reception
    deploy:
      replicas: 1
      update-config: 
        parallelism: 2
        delay: 5s
      restart-policy: 
        condition: on-failure
    ports:
    - "44512:44512"


